<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xmlns:p="http://www.springframework.org/schema/p"   
        xmlns:context="http://www.springframework.org/schema/context"   
        xmlns:mvc="http://www.springframework.org/schema/mvc" 
        xmlns:aop="http://www.springframework.org/schema/aop" 
        xsi:schemaLocation="http://www.springframework.org/schema/beans  
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context.xsd 
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
            > 
            
    <!-- 
    <mvc:annotation-driven/>会自动注册
    DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter两个bean,
    	是spring MVC为@Controllers分发请求所必须的。
	并提供了：数据绑定支持，
	@NumberFormatannotation支持，
	@DateTimeFormat支持，
	@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson）。
	后面，我们处理响应ajax请求时，就使用到了对json的支持。
          使用了该驱动注册就无法定义下面interceptors属性
    -->
    
    <!-- 启动Spring MVC的注解功能 完成请求和注解POJO的映射， 配置一个基于注解    
                的定制的WebBindingInitializer 解决日期转换问题 方法级别的处理器映射 --> 
    <mvc:annotation-driven/>       
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
    p:prefix="/" p:suffix=".jsp" />
    <mvc:interceptors>  
        <mvc:interceptor> 
            <!--    <mvc:mapping path="/*.do" />  
            <mvc:mapping path="/*.ajax" />  
             
            <mvc:mapping path="/*/*.do" />  
            <mvc:mapping path="/*/*.ajax" />  
            <mvc:mapping path="/*/*.jsp" />  
         	<mvc:mapping path="/*/*.html" />  --> 
         	<mvc:mapping path="/*.jsp" /> 
  			<mvc:exclude-mapping path="/" /> 
            <mvc:exclude-mapping path="index.jsp" /> 
            <mvc:exclude-mapping path="/login.html" />
            <mvc:exclude-mapping path="/checkcode.do" /> 
            <mvc:exclude-mapping path="/hello.do" /> 
            <mvc:exclude-mapping path="/getUserInfo.do" /> 
            <bean class=" cn.cd.caoyeung.webapp.interceptor.UserSecurityInterceptor"/>  
        </mvc:interceptor>  
    </mvc:interceptors>
	<!-- 
        context:component-scan包含context:annotation-config功能
		@Controller 声明Action组件
		@Service    声明Service组件
		@Repository 声明Dao组件
		@Component  泛指组件, 当不好归类时 
		@RequestMapping("/menu")  请求映射
		@Resource  用于注入，( j2ee提供的 ) 默认按名称装配，@Resource(name="beanName") 
		@Autowired 用于注入，(spring提供的) 默认按类型装配 
		@Transactional( rollbackFor={Exception.class}) 事务管理
		@ResponseBody
		@Scope("prototype")  设定bean的作用域
    -->
     <context:component-scan base-package="com.team.cd"/>
     <!-- 配置json响应 -->
 	<mvc:annotation-driven>  
        <mvc:message-converters register-defaults="true"> 
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">  
                <property name="supportedMediaTypes" value="application/json"/>  
            </bean>  
        </mvc:message-converters>   
	 </mvc:annotation-driven>  
	 <bean id="multipartResolver"  
	    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	    <!-- 默认编码 -->  
	    <property name="defaultEncoding" value="utf-8" />  
	    <!-- 文件大小最大值 -->  
	    <property name="maxUploadSize" value="10485760" />  
	    <!-- 内存中的最大值 -->  
	    <property name="maxInMemorySize" value="40960" />  
	 </bean>  
	 
	 <!-- Controller 使用Aop需要开启aspectj  -->
	 <aop:aspectj-autoproxy proxy-target-class="true"/> 

</beans>